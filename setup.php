<?php
// Script de instalaci√≥n autom√°tica para Plataforma de Clases Online

echo "üöÄ Instalador de Plataforma de Clases Online\n";
echo "==========================================\n\n";

// Verificar PHP
echo "1. Verificando versi√≥n de PHP...\n";
if (version_compare(PHP_VERSION, '7.4.0', '<')) {
    die("‚ùå Error: Se requiere PHP 7.4 o superior. Versi√≥n actual: " . PHP_VERSION . "\n");
}
echo "‚úÖ PHP " . PHP_VERSION . " - OK\n\n";

// Verificar extensiones requeridas
echo "2. Verificando extensiones PHP...\n";
$required_extensions = ['pdo', 'pdo_mysql', 'session', 'mbstring'];
$missing_extensions = [];

foreach ($required_extensions as $ext) {
    if (!extension_loaded($ext)) {
        $missing_extensions[] = $ext;
    }
}

if (!empty($missing_extensions)) {
    echo "‚ùå Extensiones faltantes: " . implode(', ', $missing_extensions) . "\n";
    echo "Por favor, instala las extensiones faltantes en tu servidor.\n";
    exit(1);
}
echo "‚úÖ Todas las extensiones requeridas est√°n instaladas\n\n";

// Verificar archivo de configuraci√≥n
echo "3. Verificando configuraci√≥n de base de datos...\n";
$config_file = 'config/database.php';

if (!file_exists($config_file)) {
    if (file_exists('config/database.php')) {
        echo "‚ö†Ô∏è  Archivo database.php no encontrado.\n";
        echo "Copiando archivo de ejemplo...\n";
        copy('config/database.example.php', $config_file);
        echo "‚úÖ Archivo creado. Ed√≠talo con tus credenciales reales.\n";
    } else {
        echo "‚ùå No se encontr√≥ archivo de configuraci√≥n ni plantilla.\n";
        exit(1);
    }
} else {
    echo "‚úÖ Archivo de configuraci√≥n encontrado\n";
}

// Intentar conectar a la base de datos
echo "\n4. Probando conexi√≥n a base de datos...\n";
try {
    require_once $config_file;

    // Verificar que las variables existen
    if (!isset($pdo)) {
        throw new Exception("Variable \$pdo no definida en config/database.php");
    }

    // Probar conexi√≥n
    $stmt = $pdo->query("SELECT 1");
    echo "‚úÖ Conexi√≥n a base de datos exitosa\n";

    // Verificar si las tablas existen
    echo "\n5. Verificando estructura de base de datos...\n";
    $tables = ['usuarios', 'roles', 'estados_usuario', 'administrador', 'profesor', 'estudiante', 'estados_pago', 'pagos', 'estados_reserva', 'estados_disponibilidad', 'dias_semana', 'materias', 'profesor_materia', 'estudiante_materia', 'disponibilidad_profesores', 'reservas', 'reviews'];
    $missing_tables = [];

    foreach ($tables as $table) {
        $stmt = $pdo->query("SHOW TABLES LIKE '$table'");
        if ($stmt->rowCount() == 0) {
            $missing_tables[] = $table;
        }
    }

    if (!empty($missing_tables)) {
        echo "‚ùå Tablas faltantes: " . implode(', ', $missing_tables) . "\n";
        echo "Ejecuta primero el script plataforma_clases.sql en phpMyAdmin\n";
        exit(1);
    } else {
        echo "‚úÖ Todas las tablas existen\n";
    }

    // Insertar datos de prueba
    echo "\n6. Insertando datos de prueba...\n";

    try {
        // Insertar estados de usuario b√°sicos
        $pdo->exec("INSERT IGNORE INTO Estados_Usuario (user_status_id, status, description) VALUES
            (1, 'Activo', 'Usuario activo en el sistema'),
            (2, 'Inactivo', 'Usuario inactivo')");

        // Insertar estados de pago b√°sicos
        $pdo->exec("INSERT IGNORE INTO Estados_Pago (payment_status_id, status, description) VALUES
            (1, 'Pendiente', 'Pago pendiente de procesamiento'),
            (2, 'Completado', 'Pago completado exitosamente')");

        // Insertar estados de reserva b√°sicos
        $pdo->exec("INSERT IGNORE INTO Estados_Reserva (reservation_status_id, status, description) VALUES
            (1, 'Pendiente', 'Reserva solicitada pero no confirmada'),
            (2, 'Confirmada', 'Reserva confirmada por el profesor'),
            (3, 'Cancelada', 'Reserva cancelada'),
            (4, 'Completada', 'Clase completada')");

        // Insertar estados de disponibilidad b√°sicos
        $pdo->exec("INSERT IGNORE INTO Estados_Disponibilidad (availability_status_id, status, description) VALUES
            (1, 'Disponible', 'Horario disponible para reservas'),
            (2, 'No Disponible', 'Horario no disponible para reservas')");

        // Insertar d√≠as de la semana
        $pdo->exec("INSERT IGNORE INTO Dias_Semana (week_day_id, day, day_order) VALUES
            (1, 'Lunes', 1),
            (2, 'Martes', 2),
            (3, 'Mi√©rcoles', 3),
            (4, 'Jueves', 4),
            (5, 'Viernes', 5),
            (6, 'S√°bado', 6),
            (7, 'Domingo', 7)");

        // Insertar roles
        $pdo->exec("INSERT IGNORE INTO Roles (role_id, role_name, description) VALUES
            (1, 'administrador', 'Usuario con acceso completo al sistema'),
            (2, 'profesor', 'Usuario que imparte clases'),
            (3, 'estudiante', 'Usuario que toma clases')");

        // Insertar materias
        $pdo->exec("INSERT IGNORE INTO Materias (subject_id, subject_name, description, price_per_hour) VALUES
            (1, 'Matem√°ticas', 'Clases de matem√°ticas b√°sicas y avanzadas', 15.00),
            (2, 'F√≠sica', 'Clases de f√≠sica te√≥rica y pr√°ctica', 18.00),
            (3, 'Qu√≠mica', 'Clases de qu√≠mica general y org√°nica', 16.00),
            (4, 'Programaci√≥n', 'Clases de desarrollo de software', 20.00),
            (5, 'Ingl√©s', 'Clases de ingl√©s conversacional y acad√©mico', 12.00),
            (6, 'Espa√±ol', 'Clases de literatura y gram√°tica espa√±ola', 14.00)");

        // Generar hashes de contrase√±as reales
        $admin_password = password_hash('admin123', PASSWORD_DEFAULT);
        $professor_password = password_hash('prof123', PASSWORD_DEFAULT);
        $student_password = password_hash('estu123', PASSWORD_DEFAULT);

        // Insertar usuarios de prueba
        $pdo->exec("INSERT IGNORE INTO Usuarios (user_id, first_name, last_name, email, password, phone, role_id, user_status_id, bio) VALUES
            (1, 'Admin', 'Sistema', 'admin@plataforma.com', '$admin_password', '1234-5678', 1, 1, 'Administrador del sistema'),
            (2, 'Mar√≠a', 'Gonz√°lez', 'maria.profesor@plataforma.com', '$professor_password', '2222-1111', 2, 1, 'Profesora de Matem√°ticas y F√≠sica'),
            (3, 'Carlos', 'Rodr√≠guez', 'carlos.profesor@plataforma.com', '$professor_password', '3333-2222', 2, 1, 'Profesor de Programaci√≥n'),
            (4, 'Ana', 'Mart√≠nez', 'ana.profesor@plataforma.com', '$professor_password', '4444-3333', 2, 1, 'Profesora de Ingl√©s'),
            (5, 'Juan', 'P√©rez', 'juan.estudiante@plataforma.com', '$student_password', '5555-4444', 3, 1, 'Estudiante de Ingenier√≠a'),
            (6, 'Mar√≠a', 'L√≥pez', 'maria.estudiante@plataforma.com', '$student_password', '6666-5555', 3, 1, 'Estudiante de Administraci√≥n'),
            (7, 'Pedro', 'S√°nchez', 'pedro.estudiante@plataforma.com', '$student_password', '7777-6666', 3, 1, 'Estudiante de secundaria')");

        // Insertar horarios de profesores
        $pdo->exec("INSERT IGNORE INTO Disponibilidad_Profesores (availability_id, user_id, week_day_id, availability_status_id, start_time, end_time, subject_id, price_per_hour) VALUES
            (1, 2, 1, 1, '08:00:00', '10:00:00', 1, 15.00),
            (2, 2, 1, 1, '14:00:00', '16:00:00', 2, 18.00),
            (3, 2, 3, 1, '09:00:00', '11:00:00', 1, 15.00),
            (4, 3, 2, 1, '16:00:00', '18:00:00', 4, 20.00),
            (5, 3, 4, 1, '17:00:00', '19:00:00', 4, 20.00),
            (6, 4, 1, 1, '11:00:00', '13:00:00', 5, 12.00),
            (7, 4, 2, 1, '11:00:00', '13:00:00', 5, 12.00),
            (8, 4, 3, 1, '11:00:00', '13:00:00', 5, 12.00)");

        // Insertar reservas de prueba
        $pdo->exec("INSERT IGNORE INTO Reservas (reservation_id, user_id, student_user_id, availability_id, reservation_status_id, class_date, class_time, notes) VALUES
            (1, 2, 5, 1, 1, DATE_ADD(CURDATE(), INTERVAL 2 DAY), '08:00:00', 'Clase de Matem√°ticas b√°sicas'),
            (2, 2, 5, 2, 2, DATE_ADD(CURDATE(), INTERVAL 3 DAY), '14:00:00', 'Repaso de F√≠sica'),
            (3, 3, 6, 4, 1, DATE_ADD(CURDATE(), INTERVAL 1 DAY), '16:00:00', 'Introducci√≥n a Programaci√≥n'),
            (4, 4, 7, 6, 2, DATE_ADD(CURDATE(), INTERVAL 4 DAY), '11:00:00', 'Ingl√©s conversacional')");

        // Insertar pagos de prueba (solo PayPal)
        $pdo->exec("INSERT IGNORE INTO Pagos (payment_id, user_id, amount, payment_status_id, payment_date, transaction_id, payment_method, description) VALUES
            (1, 5, 15.00, 1, DATE_SUB(CURDATE(), INTERVAL 1 DAY), 'TXN_001', 'PayPal', 'Pago pendiente por clase de Matem√°ticas - Reserva: 1'),
            (2, 5, 18.00, 2, DATE_SUB(CURDATE(), INTERVAL 2 DAY), 'TXN_002', 'PayPal', 'Pago completado por clase de F√≠sica - Reserva: 2'),
            (3, 6, 20.00, 1, CURDATE(), 'TXN_003', 'PayPal', 'Pago pendiente por clase de Programaci√≥n - Reserva: 3')");

        // Insertar reviews de prueba
        $pdo->exec("INSERT IGNORE INTO Reviews (review_id, reservation_id, reviewer_user_id, reviewed_user_id, rating, comment) VALUES
            (1, 1, 5, 2, 5, 'Excelente profesora, muy paciente y explica muy bien los conceptos'),
            (2, 2, 5, 2, 4, 'Buena clase de f√≠sica, me ayud√≥ mucho con los conceptos b√°sicos'),
            (3, 3, 6, 3, 5, 'Carlos es un excelente profesor de programaci√≥n')");

        // Crear relaciones entre usuarios y sus tablas espec√≠ficas
        echo "Creando relaciones de usuarios...\n";

        // Administradores
        $pdo->exec("INSERT IGNORE INTO Administrador (user_id, permissions) VALUES
            (1, 'full_access')");

        // Profesores
        $pdo->exec("INSERT IGNORE INTO Profesor (user_id, personal_description, academic_level, hourly_rate) VALUES
            (2, 'Profesora de Matem√°ticas y F√≠sica', 'Licenciatura en Matem√°ticas', 15.00),
            (3, 'Profesor de Programaci√≥n', 'Ingenier√≠a en Sistemas', 20.00),
            (4, 'Profesora de Ingl√©s', 'Certificaci√≥n TEFL', 12.00)");

        // Estudiantes
        $pdo->exec("INSERT IGNORE INTO Estudiante (user_id, personal_description) VALUES
            (5, 'Estudiante de Ingenier√≠a'),
            (6, 'Estudiante de Administraci√≥n'),
            (7, 'Estudiante de secundaria')");

        // Insertar relaciones Profesor-Materia (obtener IDs reales de la tabla Profesor)
        $stmt = $pdo->query("SELECT profesor_id, user_id FROM Profesor ORDER BY profesor_id");
        $profesores = $stmt->fetchAll(PDO::FETCH_ASSOC);

        // Crear mapeo: user_id -> profesor_id real
        $profesorMap = [];
        foreach ($profesores as $prof) {
            $profesorMap[$prof['user_id']] = $prof['profesor_id'];
        }

        // Insertar relaciones usando los profesor_id reales
        $pdo->exec("INSERT IGNORE INTO Profesor_Materia (profesor_id, subject_id, experience_years, certification) VALUES
            ({$profesorMap[2]}, 1, 5, 'Certificaci√≥n en Matem√°ticas Avanzadas'),
            ({$profesorMap[2]}, 2, 3, 'Certificaci√≥n en F√≠sica'),
            ({$profesorMap[3]}, 4, 8, 'Certificaci√≥n en Desarrollo de Software'),
            ({$profesorMap[4]}, 5, 6, 'Certificaci√≥n TEFL')");

        // Verificar que se insertaron correctamente
        $stmt = $pdo->query("SELECT COUNT(*) as total FROM Profesor_Materia");
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        echo "‚úÖ Profesor_Materia: " . $result['total'] . " registros insertados\n";

        // Verificar que se insertaron todos los registros
        $stmt = $pdo->query("SELECT COUNT(*) as total FROM Profesor_Materia");
        $result = $stmt->fetch(PDO::FETCH_ASSOC);
        if ($result['total'] != 4) {
            echo "‚ö†Ô∏è  Solo se insertaron " . $result['total'] . " registros en Profesor_Materia (deber√≠an ser 4)\n";
        } else {
            echo "‚úÖ Se insertaron correctamente 4 registros en Profesor_Materia\n";
        }

        // Insertar relaciones Estudiante-Materia
        $pdo->exec("INSERT IGNORE INTO Estudiante_Materia (estudiante_materia_id, estudiante_id, subject_id, enrollment_date, status, created_at, updated_at) VALUES
            (1, 1, 1, DATE_SUB(CURDATE(), INTERVAL 30 DAY), 'activo', DATE_SUB(CURDATE(), INTERVAL 30 DAY), DATE_SUB(CURDATE(), INTERVAL 30 DAY)),
            (2, 1, 2, DATE_SUB(CURDATE(), INTERVAL 25 DAY), 'activo', DATE_SUB(CURDATE(), INTERVAL 25 DAY), DATE_SUB(CURDATE(), INTERVAL 25 DAY)),
            (3, 1, 4, DATE_SUB(CURDATE(), INTERVAL 20 DAY), 'activo', DATE_SUB(CURDATE(), INTERVAL 20 DAY), DATE_SUB(CURDATE(), INTERVAL 20 DAY)),
            (4, 2, 4, DATE_SUB(CURDATE(), INTERVAL 15 DAY), 'activo', DATE_SUB(CURDATE(), INTERVAL 15 DAY), DATE_SUB(CURDATE(), INTERVAL 15 DAY)),
            (5, 2, 5, DATE_SUB(CURDATE(), INTERVAL 10 DAY), 'activo', DATE_SUB(CURDATE(), INTERVAL 10 DAY), DATE_SUB(CURDATE(), INTERVAL 10 DAY)),
            (6, 3, 1, DATE_SUB(CURDATE(), INTERVAL 35 DAY), 'completado', DATE_SUB(CURDATE(), INTERVAL 35 DAY), DATE_SUB(CURDATE(), INTERVAL 30 DAY)),
            (7, 3, 5, DATE_SUB(CURDATE(), INTERVAL 5 DAY), 'activo', DATE_SUB(CURDATE(), INTERVAL 5 DAY), DATE_SUB(CURDATE(), INTERVAL 5 DAY))");

        echo "‚úÖ Relaciones de usuarios creadas correctamente\n";
        echo "‚úÖ Datos de prueba insertados correctamente\n";

    } catch (Exception $e) {
        echo "‚ùå Error insertando datos de prueba: " . $e->getMessage() . "\n";
    }


} catch (Exception $e) {
    echo "‚ùå Error de conexi√≥n: " . $e->getMessage() . "\n";
    echo "Verifica tus credenciales en config/database.php\n";
    exit(1);
}

// Verificar permisos de archivos
echo "\n7. Verificando permisos de archivos...\n";
$writable_dirs = ['config', 'public'];
$permission_errors = [];

foreach ($writable_dirs as $dir) {
    if (!is_writable($dir)) {
        $permission_errors[] = $dir;
    }
}

if (!empty($permission_errors)) {
    echo "‚ö†Ô∏è  Directorios sin permisos de escritura: " . implode(', ', $permission_errors) . "\n";
} else {
    echo "‚úÖ Permisos de archivos correctos\n";
}

echo "\nüéâ Instalaci√≥n completada!\n";
echo "========================\n";
echo "Tu plataforma est√° lista para ser utilizada.\n\n";
echo "URLs de acceso (ajusta el puerto seg√∫n tu configuraci√≥n de XAMPP):\n";
echo "- P√°gina principal: http://localhost:[PUERTO]/plataforma-clases-online\n";
echo "- Registrar nuevos usuarios: http://localhost:[PUERTO]/plataforma-clases-online/register\n";
echo "- Iniciar sesi√≥n: http://localhost:[PUERTO]/plataforma-clases-online/auth/login\n\n";

echo "Usuarios de prueba:\n";
echo "- Admin: admin@plataforma.com / admin123\n";
echo "- Profesores: maria.profesor@plataforma.com, carlos.profesor@plataforma.com, ana.profesor@plataforma.com / prof123\n";
echo "- Estudiantes: juan.estudiante@plataforma.com, maria.estudiante@plataforma.com, pedro.estudiante@plataforma.com / estu123\n\n";



echo "¬°Disfruta tu plataforma de clases online! üìö\n";
?>